{
    "version": "https://jsonfeed.org/version/1",
    "title": "橙子安全屋",
    "description": "My daily record and my safehouse",
    "home_page_url": "http://chengziyu.xyz",
    "items": [
        {
            "id": "http://chengziyu.xyz/Daily-Record/emotion/Congratulation/",
            "url": "http://chengziyu.xyz/Daily-Record/emotion/Congratulation/",
            "title": "The First!",
            "date_published": "2022-03-19T15:33:26.000Z",
            "content_html": "<p>#今天终于把 Blog 上架了～～上几张图庆祝一下</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/MuMu-HuaHua/picgo/202203191044844.png\" alt=\"\"></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/MuMu-HuaHua/picgo/202203191053142.png\" alt=\"\"></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/MuMu-HuaHua/picgo/202203191053142.png\" alt=\"\"></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/MuMu-HuaHua/picgo/202203191044847.png\" alt=\"\"></p>\n",
            "tags": [
                "Hexo"
            ]
        },
        {
            "id": "http://chengziyu.xyz/computer-science/java/course-1/week-2/",
            "url": "http://chengziyu.xyz/computer-science/java/course-1/week-2/",
            "title": "第2周 判断",
            "date_published": "2020-04-13T11:12:45.000Z",
            "content_html": "<p>:::note info<br>\n 以下为个人学习笔记和习题整理<br>\n课程：零基础学 Java 语言 - 浙江大学 - 翁恺 @ 中国大学 MOOC<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQxMDAx\">https://www.icourse163.org/course/ZJU-1001541001</span><br>\n:::</p>\n<h1 id=\"课堂笔记\"><a class=\"markdownIt-Anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"关系运算\"><a class=\"markdownIt-Anchor\" href=\"#关系运算\">#</a> 关系运算</h2>\n<ul>\n<li>六个关系运算符：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==</td>\n<td>相等</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>不相等</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>大于</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>大于或等于</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>小于或等于</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>关系运算结果为  <code>true</code>  或  <code>false</code></li>\n<li>优先级\n<ul>\n<li>所有关系运算符的优先级比算术运算低，但比赋值运算高</li>\n<li>判断是否相等的 == 和！= 优先级比其他的低</li>\n<li>连续的关系运算是从左到右进行的</li>\n</ul>\n</li>\n<li>判断两个浮点数是否相等的方法</li>\n</ul>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">\tMath.abs(f1-f2)<0.0000001\n</code></pre>\n<ul class=\"task-list\">\n<li>下列表达式中错误的有？</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> 5 &gt; 3 == 6 &gt; 4</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> 6 &gt; 5 &gt; 4</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\"><label for=\"cbx_2\"> a == b == true</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" checked=\"true\" disabled=\"true\"><label for=\"cbx_3\"> a == b == 6</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\"><label for=\"cbx_4\"> a ==  b &gt; false</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" checked=\"true\" disabled=\"true\"><label for=\"cbx_5\"> (a == b) &gt; false<br>\n <code>true 和 false 不能比较大小</code> </label></li>\n</ul>\n<h2 id=\"判断语句-if-else\"><a class=\"markdownIt-Anchor\" href=\"#判断语句-if-else\">#</a> 判断语句 if else</h2>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">if(x < 0) \n{\n\t...\n}\nelse if(x == 0) \n{\n\t...\n}\nelse\n{\n\t...\n}\n</code></pre>\n<h2 id=\"多路分支-switch-case\"><a class=\"markdownIt-Anchor\" href=\"#多路分支-switch-case\">#</a> 多路分支 switch case</h2>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">switch (type)\n{\n    case 1:\n    case 2:\n        ...\n        break;\n    default:\n        System.out.println(...);\n        break;\n}\n</code></pre>\n<ul>\n<li>计算 switch 后面的控制表达式以后，程序会跳到相应的 case，但是如果这个 case 内部没有 break，那么在执行完语句后，就会顺序执行到下面的 case，直到遇到 break 或者 switch 结束。</li>\n</ul>\n<h1 id=\"小测验\"><a class=\"markdownIt-Anchor\" href=\"#小测验\">#</a> 小测验</h1>\n<ol>\n<li class=\"quiz essay\">\n<p>写出以下代码段的执行结果：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">int num=34, max=30;\nif ( num >= max*2 )\n    System.out.println(\"zhang\");\n    System.out.println(\"huang\");\nSystem.out.println(\"zhu\");\n</code></pre>\n<blockquote>\n<p>huang<br>\nzhu</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>写出以下代码段的执行结果：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">int limit = 100;\nint num1 = 15;\nint num2 = 40;\nif ( limit <= limit)\n{\n    if ( num1 == num2 )\n        System.out.println(\"lemon\");\n    System.out.println(\"lime\");\n}\nSystem.out.println(\"grape\");\n</code></pre>\n<blockquote>\n<p>lime<br>\ngrape</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"编程题\"><a class=\"markdownIt-Anchor\" href=\"#编程题\">#</a> 编程题</h1>\n<h2 id=\"题目1-时间换算5分\"><a class=\"markdownIt-Anchor\" href=\"#题目1-时间换算5分\">#</a> 题目 1. 时间换算（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br>\n UTC 是世界协调时，BJT 是北京时间，UTC 时间相当于 BJT 减去 8。现在，你的程序要读入一个整数，表示 BJT 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果分小于 10 分，需要保留十位上的 0。如 1124 表示 11 点 24 分，而 905 表示 9 点 5 分，36 表示 0 点 36 分，7 表示 0 点 7 分。</p>\n<p>有效的输入范围是 0 到 2359，即你的程序不可能从测试服务器读到 0 到 2359 以外的输入数据。</p>\n<p>你的程序要输出这个时间对应的 UTC 时间，输出的格式和输入的相同，即输出一个整数，表示 UTC 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果分小于 10 分，需要保留十位上的 0。</p>\n<p><em>提醒：要小心跨日的换算。</em></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br>\n一个整数，表示 BJT 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果小时不是 0 而且分小于 10 分，需要保留十位上的 0。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br>\n一个整数，表示 UTC 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果小时不是 0 而且分小于 10 分，需要保留十位上的 0。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br>\n 933</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br>\n 133</p>\n</li>\n</ul>\n<h3 id=\"解题代码\"><a class=\"markdownIt-Anchor\" href=\"#解题代码\">#</a> 解题代码</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tint bjt = in.nextInt();\n\t\t\n\t\tint utc = bjt - 800;\n\t\tif(utc < 0)\n\t\t{\n\t\t\tutc += 2400; // 时为负数，则进行隔日计算\n\t\t}\n\t\t\n\t\tSystem.out.println(utc);\n\t}\n\n}\n</code></pre>\n<h2 id=\"题目2-信号报告5分\"><a class=\"markdownIt-Anchor\" href=\"#题目2-信号报告5分\">#</a> 题目 2. 信号报告（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br>\n无线电台的 RS 制信号报告是由三两个部分组成的：</p>\n<p>R (Readability) 信号可辨度即清晰度.</p>\n<p>S (Strength)    信号强度即大小.</p>\n<p>其中 R 位于报告第一位，共分 5 级，用 1—5 数字表示.</p>\n<blockquote>\n<p>1—Unreadable</p>\n<p>2—Barely readable, occasional words distinguishable</p>\n<p>3—Readable with considerable difficulty</p>\n<p>4—Readable with practically no difficulty</p>\n<p>5—Perfectly readable</p>\n</blockquote>\n<p>报告第二位是 S，共分九个级别，用 1—9 中的一位数字表示</p>\n<blockquote>\n<p>1—Faint signals, barely perceptible</p>\n<p>2—Very weak signals</p>\n<p>3—Weak signals</p>\n<p>4—Fair signals</p>\n<p>5—Fairly good signals</p>\n<p>6—Good signals</p>\n<p>7—Moderately strong signals</p>\n<p>8—Strong signals</p>\n<p>9—Extremely strong signals</p>\n</blockquote>\n<p>现在，你的程序要读入一个信号报告的数字，然后输出对应的含义。如读到 59，则输出：\t<br>\n <code>\tExtremely strong signals, perfectly readable.\t</code></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br>\n一个整数，信号报告。整数的十位部分表示可辨度，个位部分表示强度。输入的整数范围是 [11,59] 内有效的数字，这个范围外的数字不可能出现在测试数据中。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br>\n一句话，表示这个信号报告的意义。按照题目中的文字，先输出表示强度的文字，跟上逗号和空格，然后是表示可辨度的文字，跟上句号。注意可辨度的句子的第一个字母是小写的。注意这里的标点符号都是英文的。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br>\n 33</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br>\n Weak signals, readable with considerable difficulty.</p>\n</li>\n</ul>\n<h3 id=\"解题代码-2\"><a class=\"markdownIt-Anchor\" href=\"#解题代码-2\">#</a> 解题代码</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tint rs = in.nextInt();\t\t\n\t\tint readability = rs / 10;\n\t\tint strength = rs % 10;\n\t\t\n\t\tswitch(strength)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tSystem.out.print(\"Faint signals, barely perceptible\");\n\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.print(\"Very weak signals\");\n\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.print(\"Weak signals\");\n\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.print(\"Fair signals\");\n\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.print(\"Fairly good signals\");\n\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tSystem.out.print(\"Good signals\");\n\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tSystem.out.print(\"Moderately strong signals\");\n\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tSystem.out.print(\"Strong signals\");\n\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tSystem.out.print(\"Extremely strong signals\");\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tswitch(readability)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tSystem.out.print(\", unreadable.\");\n\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.print(\", barely readable, occasional words distinguishable.\");\n\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.print(\", readable with considerable difficulty.\");\n\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.print(\", readable with practically no difficulty.\");\n\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.print(\", perfectly readable.\");\n\t\t\tbreak;\n\t\t}\n\t}\n\n}\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "http://chengziyu.xyz/computer-science/java/course-1/week-1/",
            "url": "http://chengziyu.xyz/computer-science/java/course-1/week-1/",
            "title": "第1周 计算",
            "date_published": "2020-04-12T12:46:25.000Z",
            "content_html": "<p>:::note info<br>\n 以下为个人学习笔记和习题整理<br>\n课程：零基础学 Java 语言 - 浙江大学 - 翁恺 @ 中国大学 MOOC<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQxMDAx\">https://www.icourse163.org/course/ZJU-1001541001</span><br>\n:::</p>\n<h1 id=\"课堂笔记\"><a class=\"markdownIt-Anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"读输入-字符串输出\"><a class=\"markdownIt-Anchor\" href=\"#读输入-字符串输出\">#</a> 读输入、字符串输出</h2>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">import java.util.Scanner;\n...\nScanner in = new Scanner(System.in);\n// 输入Scan之后，按下键盘 Alt + “/” 键，Eclipse下自动补全。\n\nSystem.out.println(in.nextLine());\n// 让in这个对象做读入下一行的动作，结果交给System.out这个对象去打印一行。\n\n// 字符串的 + 用来连接两个字符串形成更长的字符串。\nSystem.out.println(\"Hello\" + \" world.\");\nSystem.out.println(\"Hello\" + 2);\nSystem.out.println(\"Hello\" + 2 + 3);\nSystem.out.println(2 + 3 + \"Hello\");\n</code></pre>\n<p>tips：</p>\n<ul>\n<li><code>System.out.println</code>  会换行， <code>System.out.print</code>  则不会换行</li>\n<li>出现警告： <code>Resource leak: 'in' is never closed</code> ，可以在函数的最后加入</li>\n</ul>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">in.close();//释放\n</code></pre>\n<h2 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h2>\n<ul>\n<li>\n<p><strong>形式</strong>：&lt;类型名称&gt; &lt; 变量名称 &gt; = &lt; 初始值 &gt;<br>\n <code>int price, amount; // 同时定义两个变量</code> <br>\n <code>int price = 0; // 定义变量并赋值</code> <br>\n <code>int price, amount = 100, age;</code></p>\n</li>\n<li>\n<p><strong>类型名称</strong>：Java 是一种<strong>强类型语言</strong>，所有变量在使用前必须定义或声明，所有变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，程序运行过程中也不能改变变量的类型。</p>\n</li>\n<li>\n<p><strong>变量名称</strong>：又称标识符，只能由字母、数字、下划线构成，数字不能出现在第一个位置。此外，Java 的保留字也不能用作标识符。</p>\n</li>\n<li>\n<p>Java 的保留字列表</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>abstract</th>\n<th>do</th>\n<th>implements</th>\n<th>protected</th>\n<th>throws</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boolean</td>\n<td>double</td>\n<td>import</td>\n<td>public</td>\n<td>transient</td>\n</tr>\n<tr>\n<td>break</td>\n<td>else</td>\n<td>instanceof</td>\n<td>return</td>\n<td>true</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>extends</td>\n<td>int</td>\n<td>short</td>\n<td>try</td>\n</tr>\n<tr>\n<td>case</td>\n<td>false</td>\n<td>interface</td>\n<td>static</td>\n<td>while</td>\n</tr>\n<tr>\n<td>catch</td>\n<td>final</td>\n<td>long</td>\n<td>strictfp</td>\n<td>void</td>\n</tr>\n<tr>\n<td>char</td>\n<td>finally</td>\n<td>native</td>\n<td>super</td>\n<td>volatile</td>\n</tr>\n<tr>\n<td>class</td>\n<td>float</td>\n<td>new</td>\n<td>switch</td>\n</tr>\n<tr>\n<td>const*</td>\n<td>for</td>\n<td>null</td>\n<td>synchronized</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>goto*</td>\n<td>package</td>\n<td>this</td>\n</tr>\n<tr>\n<td>default</td>\n<td>if</td>\n<td>private</td>\n<td>throw</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"task-list\">\n<li>以下哪些标识符是符合规则的？</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\"><label for=\"cbx_0\"> currency</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> lastName</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\"><label for=\"cbx_2\"> fireplace</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\"><label for=\"cbx_3\"> _last_name</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\"><label for=\"cbx_4\"> xingmin</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\"><label for=\"cbx_5\"> class</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_6\" disabled=\"true\"><label for=\"cbx_6\"> goto</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_7\" disabled=\"true\"><label for=\"cbx_7\"> 4ever</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_8\" disabled=\"true\"><label for=\"cbx_8\"> time-machine</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_9\" disabled=\"true\"><label for=\"cbx_9\"> Int</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_10\" disabled=\"true\"><label for=\"cbx_10\"> $12</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_11\" disabled=\"true\"><label for=\"cbx_11\"> 我是变量</label></li>\n</ul>\n<h2 id=\"常量-final\"><a class=\"markdownIt-Anchor\" href=\"#常量-final\">#</a> 常量 final</h2>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">final int AMOUNT = 100;\n// final是一个修饰符，表示这个变量的值一旦初始化，就不能再修改了。\n</code></pre>\n<h2 id=\"变量类型\"><a class=\"markdownIt-Anchor\" href=\"#变量类型\">#</a> 变量类型</h2>\n<h3 id=\"整数-int\"><a class=\"markdownIt-Anchor\" href=\"#整数-int\">#</a> 整数 int</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">int price = in.nextInt();\n</code></pre>\n<ul>\n<li>如果用户输入的不是整数，则会报错  <code>java.util.InputMismatchException</code> 。</li>\n<li>程序要求读入多个数字时，可以在一行输入，中间用空格分开，也可以多行输入。</li>\n<li>每次召唤 <code>in.nextInt()</code> ，它就等待用户输入一个整数。</li>\n<li>两个整数的运算结果只能是整数。</li>\n<li>在 Java 中， <code>10</code>  和 <code>10.0</code>  是完全不同的数。</li>\n</ul>\n<h3 id=\"浮点数-double\"><a class=\"markdownIt-Anchor\" href=\"#浮点数-double\">#</a> 浮点数 double</h3>\n<ul>\n<li><strong>浮点数运算有误差</strong>：由于二进制的自身限制，浮点计算需要将十进制先转换为二进制，然后对二进制数进行计算，因此导致误差。</li>\n</ul>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">System.out.println(1.2-1.1);\n// 结果为 0.09999999999999987\n</code></pre>\n<ul>\n<li>整数类型不能表达有小数部分的数；整数运算速度快，占内存小；日常中整数运算多。</li>\n</ul>\n<h2 id=\"赋值运算\"><a class=\"markdownIt-Anchor\" href=\"#赋值运算\">#</a> 赋值运算</h2>\n<h3 id=\"强制类型转换\"><a class=\"markdownIt-Anchor\" href=\"#强制类型转换\">#</a> 强制类型转换</h3>\n<ul>\n<li>浮点数和整数放在一起运算时，Java 会将整数转换成浮点数，然后进行浮点数运算。</li>\n<li>强制性转换的优先级高于四则运算。</li>\n</ul>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">double a = 1.0;\ndouble b = 2.0;\nint i = (int)a/b; //会报错\nint i = (int)(a/b); //不会报错\n</code></pre>\n<h3 id=\"运算符优先级\"><a class=\"markdownIt-Anchor\" href=\"#运算符优先级\">#</a> 运算符优先级</h3>\n<ul>\n<li>单目运算符 <code>+</code>   <code>-</code>  优先级最高</li>\n<li>结合关系一般自左向右，单目 <code>+</code>   <code>-</code>  和赋值 <code>=</code>  自右向左。</li>\n</ul>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">result = a = b = 3 + c;\nresult = 2;\nresult = (result = result * 2) * 6 * (result = 3 + result);\n</code></pre>\n<h3 id=\"复合赋值\"><a class=\"markdownIt-Anchor\" href=\"#复合赋值\">#</a> 复合赋值</h3>\n<ul>\n<li>5 个算术运算符， <code>+ - * / %</code> ，可以和赋值运算符  <code>=</code>  结合起来，形成复合赋值运算。注意，两个运算符中间不要有空格。</li>\n</ul>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">total += (sum+100)/2;\ntotal = total + (sum+100)/2;\n\ntotal * = sum+12;\ntotal = total*(sum+12);\n\ntotal /= 12+6;\ntotal = total / (12+6);\n</code></pre>\n<ul>\n<li>递增递减运算符  <code>++</code>   <code>--</code> ，给变量 + 1 或 - 1</li>\n<li>前缀后缀：</li>\n</ul>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">a = 14;\nt1 = a++; // t1先被赋值为 a 即14， a自加到 15\nt2 = ++a; // a先自加到 15，t2被赋值为 a 即 15\n</code></pre>\n<h1 id=\"编程题\"><a class=\"markdownIt-Anchor\" href=\"#编程题\">#</a> 编程题</h1>\n<h2 id=\"题目1-温度转换5分\"><a class=\"markdownIt-Anchor\" href=\"#题目1-温度转换5分\">#</a> 题目 1. 温度转换（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br>\n写一个将华氏温度转换成摄氏温度的程序，转换的公式是：</p>\n<p><code>°F = (9/5)*°C + 32</code></p>\n<p>其中 C 表示摄氏温度，F 表示华氏温度。</p>\n<p>程序的输入是一个整数，表示华氏温度。输出对应的摄氏温度，也是一个整数。</p>\n<p>提示，为了把计算结果的浮点数转换成整数，需要使用下面的表达式：</p>\n<p><code>(int)x;</code></p>\n<p>其中 x 是要转换的那个浮点数。</p>\n<p><em>注意：除了题目要求的输出，不能输出任何其他内容，比如输入时的提示，输出时的说明等等都不能。这道题目要求转换后的数字，程序就只能输出这个数字，除此之外任何内容都不能输出。</em></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br>\n一个整数。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br>\n一个整数。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br>\n 100</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br>\n 37</p>\n</li>\n</ul>\n<h3 id=\"解题代码\"><a class=\"markdownIt-Anchor\" href=\"#解题代码\">#</a> 解题代码</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\t// 获得输入的整数\n\t\tint fahrenheit = in.nextInt();\n\t\t// 计算摄氏度\n\t\tdouble centigrade = (fahrenheit - 32) / (9 / 5.0);\n\t\t// 将浮点数转换为整数输出\n\t\tSystem.out.println((int)centigrade);\n\t}\n\n}\n</code></pre>\n",
            "tags": []
        }
    ]
}